{"name": "Создание нового сотрудника", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "dummy_page = <pages.dummy_page.DummyPage object at 0x7381ef2ec4d0>\n\n    @allure.story('Тестирование api')\n    @allure.title('Создание нового сотрудника')\n    @allure.description('По ендпоинту создать сотрудника https://dummy.restapiexample.com/api/v1/create')\n    def test_create_employess(dummy_page):\n        with allure.step('Создание нового сотрудника и проверка то что он создан'):\n>           dummy_page.createEmployee()\n\ntest_api.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/dummy_page.py:25: in createEmployee\n    data = response.json()\n../playwright_project_2_env/lib/python3.12/site-packages/playwright/sync_api/_generated.py:18114: in json\n    return mapping.from_maybe_impl(self._sync(self._impl_obj.json()))\n../playwright_project_2_env/lib/python3.12/site-packages/playwright/_impl/_fetch.py:507: in json\n    return json.loads(content)\n/usr/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/usr/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7381f0c2ac60>\ns = '<head><title>Not Acceptable!</title></head><body><h1>Not Acceptable!</h1><p>An appropriate representation of the requested resource could not be found on this server. This error was generated by Mod_Security.</p></body></html>'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/usr/lib/python3.12/json/decoder.py:355: JSONDecodeError"}, "description": "По ендпоинту создать сотрудника https://dummy.restapiexample.com/api/v1/create", "steps": [{"name": "Создание нового сотрудника и проверка то что он создан", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "trace": "  File \"/home/hama/Документы/PythonTests/playwright_project_2/tests/test_api.py\", line 17, in test_create_employess\n    dummy_page.createEmployee()\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/pages/dummy_page.py\", line 25, in createEmployee\n    data = response.json()\n           ^^^^^^^^^^^^^^^\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/playwright_project_2_env/lib/python3.12/site-packages/playwright/sync_api/_generated.py\", line 18114, in json\n    return mapping.from_maybe_impl(self._sync(self._impl_obj.json()))\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/playwright_project_2_env/lib/python3.12/site-packages/playwright/_impl/_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/playwright_project_2_env/lib/python3.12/site-packages/playwright/_impl/_fetch.py\", line 507, in json\n    return json.loads(content)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n"}, "start": 1748706712920, "stop": 1748706713255}], "attachments": [{"name": "log", "source": "65cce28f-cc98-46a5-8207-1ca815cde74c-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "431ae65c-f4f4-4548-ada2-c8ce5d269b6f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser_name", "value": "'firefox'"}], "start": 1748706712920, "stop": 1748706713257, "uuid": "cef85e3f-9c7e-4929-9b76-f6a01a4dd19f", "historyId": "25b2cad223fabcceac01be3b076e21b5", "testCaseId": "956d3f72c027d6f6df39f72649adb257", "fullName": "tests.test_api#test_create_employess", "labels": [{"name": "story", "value": "Тестирование api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "hama-ZenBook-UX425IA-UM425IA"}, {"name": "thread", "value": "20901-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}