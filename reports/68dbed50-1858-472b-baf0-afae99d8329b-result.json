{"name": "Получение списка всех сотрудников", "status": "broken", "statusDetails": {"message": "TypeError: not all arguments converted during string formatting", "trace": "dummy_page = <pages.dummy_page.DummyPage object at 0x7dad168ad190>\n\n    @allure.story('Тестирование api')\n    @allure.title('Получение списка всех сотрудников')\n    @allure.description('По ендпоинту получить список всех сотрудников GET https://dummy.restapiexample.com/api/v1/employees')\n    @allure.severity(allure.severity_level.MINOR)\n    def test_list_employees(dummy_page):\n        with allure.step('Получение списка всех сотрудников данные записаны в debug'):\n>           dummy_page.endpointListEmployess()\n\ntest_api.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/dummy_page.py:19: in endpointListEmployess\n    logging.info(f'Статус код: ',response.status)\n/usr/lib/python3.12/logging/__init__.py:2216: in info\n    root.info(msg, *args, **kwargs)\n/usr/lib/python3.12/logging/__init__.py:1539: in info\n    self._log(INFO, msg, args, **kwargs)\n/usr/lib/python3.12/logging/__init__.py:1684: in _log\n    self.handle(record)\n/usr/lib/python3.12/logging/__init__.py:1700: in handle\n    self.callHandlers(record)\n/usr/lib/python3.12/logging/__init__.py:1762: in callHandlers\n    hdlr.handle(record)\n/usr/lib/python3.12/logging/__init__.py:1028: in handle\n    self.emit(record)\n../playwright_project_2_env/lib/python3.12/site-packages/_pytest/logging.py:386: in emit\n    super().emit(record)\n/usr/lib/python3.12/logging/__init__.py:1168: in emit\n    self.handleError(record)\n/usr/lib/python3.12/logging/__init__.py:1160: in emit\n    msg = self.format(record)\n/usr/lib/python3.12/logging/__init__.py:999: in format\n    return fmt.format(record)\n../playwright_project_2_env/lib/python3.12/site-packages/_pytest/logging.py:139: in format\n    return super().format(record)\n/usr/lib/python3.12/logging/__init__.py:703: in format\n    record.message = record.getMessage()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LogRecord: root, 20, /home/hama/Документы/PythonTests/playwright_project_2/pages/dummy_page.py, 19, \"Статус код: \">\n\n    def getMessage(self):\n        \"\"\"\n        Return the message for this LogRecord.\n    \n        Return the message for this LogRecord after merging any user-supplied\n        arguments with the message.\n        \"\"\"\n        msg = str(self.msg)\n        if self.args:\n>           msg = msg % self.args\nE           TypeError: not all arguments converted during string formatting\n\n/usr/lib/python3.12/logging/__init__.py:392: TypeError"}, "description": "По ендпоинту получить список всех сотрудников GET https://dummy.restapiexample.com/api/v1/employees", "steps": [{"name": "Получение списка всех сотрудников данные записаны в debug", "status": "broken", "statusDetails": {"message": "TypeError: not all arguments converted during string formatting\n", "trace": "  File \"/home/hama/Документы/PythonTests/playwright_project_2/tests/test_api.py\", line 10, in test_list_employees\n    dummy_page.endpointListEmployess()\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/pages/dummy_page.py\", line 19, in endpointListEmployess\n    logging.info(f'Статус код: ',response.status)\n  File \"/usr/lib/python3.12/logging/__init__.py\", line 2216, in info\n    root.info(msg, *args, **kwargs)\n  File \"/usr/lib/python3.12/logging/__init__.py\", line 1539, in info\n    self._log(INFO, msg, args, **kwargs)\n  File \"/usr/lib/python3.12/logging/__init__.py\", line 1684, in _log\n    self.handle(record)\n  File \"/usr/lib/python3.12/logging/__init__.py\", line 1700, in handle\n    self.callHandlers(record)\n  File \"/usr/lib/python3.12/logging/__init__.py\", line 1762, in callHandlers\n    hdlr.handle(record)\n  File \"/usr/lib/python3.12/logging/__init__.py\", line 1028, in handle\n    self.emit(record)\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/playwright_project_2_env/lib/python3.12/site-packages/_pytest/logging.py\", line 386, in emit\n    super().emit(record)\n  File \"/usr/lib/python3.12/logging/__init__.py\", line 1168, in emit\n    self.handleError(record)\n  File \"/usr/lib/python3.12/logging/__init__.py\", line 1160, in emit\n    msg = self.format(record)\n          ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/logging/__init__.py\", line 999, in format\n    return fmt.format(record)\n           ^^^^^^^^^^^^^^^^^^\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/playwright_project_2_env/lib/python3.12/site-packages/_pytest/logging.py\", line 139, in format\n    return super().format(record)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/logging/__init__.py\", line 703, in format\n    record.message = record.getMessage()\n                     ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/logging/__init__.py\", line 392, in getMessage\n    msg = msg % self.args\n          ~~~~^~~~~~~~~~~\n"}, "start": 1748705996576, "stop": 1748705998108}], "attachments": [{"name": "log", "source": "c0bdd674-8e8e-4440-9ef1-301353d60bbb-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "23f6debf-aca9-4c54-aeb2-6cbb7c61e57b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser_name", "value": "'firefox'"}], "start": 1748705996576, "stop": 1748705998109, "uuid": "dda455fa-6719-4dff-afb8-5d5a21d70d34", "historyId": "3e722f6bf844a8496ab2ce39b02d3970", "testCaseId": "d3020ee90bb37de55c54c00daedbfddd", "fullName": "tests.test_api#test_list_employees", "labels": [{"name": "severity", "value": "minor"}, {"name": "story", "value": "Тестирование api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "hama-ZenBook-UX425IA-UM425IA"}, {"name": "thread", "value": "19247-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}