{"name": "Создание нового сотрудника", "status": "broken", "statusDetails": {"message": "Exception: Не удалось выполнить запрос после 3 попыток", "trace": "dummy_page = <pages.dummy_page.DummyPage object at 0x79d01ba66a50>\n\n    @allure.story('Тестирование api')\n    @allure.title('Создание нового сотрудника')\n    @allure.description('По ендпоинту создать сотрудника https://dummy.restapiexample.com/api/v1/create')\n    def test_create_employess(dummy_page):\n        with allure.step('Создание нового сотрудника и проверка то что он создан'):\n>           dummy_page.createEmployee()\n\ntest_api.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/dummy_page.py:62: in createEmployee\n    get_response = send_api_request(self.page, method='GET', url=get_url)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <Page url='about:blank'>, method = 'GET', url = 'https://dummy.restapiexample.com/api/v1/employee/21', data = None, headers = None, max_retries = 3\n\n    def send_api_request(context, method, url, data=None, headers=None, max_retries=3):\n        \"\"\"\n        Отправляет API-запрос и автоматически обрабатывает 429 ошибку.\n        \"\"\"\n        for attempt in range(1, max_retries + 1):\n            logging.info(f\"Попытка {attempt} — Запрос: {method} {url}\")\n    \n            if method.upper() == 'POST':\n                response = context.request.post(url, data=data, headers=headers)\n            elif method.upper() == 'GET':\n                response = context.request.get(url)\n            else:\n                raise ValueError(f\"Метод '{method}' не поддерживается\")\n    \n            if response.status == 429:\n                logging.warning(\"Получен 429 Too Many Requests. Жду 5 секунд...\")\n                time.sleep(15)\n            else:\n                return response\n    \n>       raise Exception(f\"Не удалось выполнить запрос после {max_retries} попыток\")\nE       Exception: Не удалось выполнить запрос после 3 попыток\n\n../pages/dummy_page.py:28: Exception"}, "description": "По ендпоинту создать сотрудника https://dummy.restapiexample.com/api/v1/create", "steps": [{"name": "Создание нового сотрудника и проверка то что он создан", "status": "broken", "statusDetails": {"message": "Exception: Не удалось выполнить запрос после 3 попыток\n", "trace": "  File \"/home/hama/Документы/PythonTests/playwright_project_2/tests/test_api.py\", line 17, in test_create_employess\n    dummy_page.createEmployee()\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/pages/dummy_page.py\", line 62, in createEmployee\n    get_response = send_api_request(self.page, method='GET', url=get_url)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/pages/dummy_page.py\", line 28, in send_api_request\n    raise Exception(f\"Не удалось выполнить запрос после {max_retries} попыток\")\n"}, "start": 1748713389349, "stop": 1748713458099}], "attachments": [{"name": "log", "source": "44ef3f25-3ef8-40ca-ae0f-ab9e8228e190-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "caa5248c-7d94-4f19-9d49-19978384634a-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "0fba988c-d3d0-467b-a4a8-7f0b105cbf62-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser_name", "value": "'firefox'"}], "start": 1748713389349, "stop": 1748713458106, "uuid": "3c4b2bd1-cdc6-40af-afaf-46cff9b7f6ad", "historyId": "25b2cad223fabcceac01be3b076e21b5", "testCaseId": "956d3f72c027d6f6df39f72649adb257", "fullName": "tests.test_api#test_create_employess", "labels": [{"name": "story", "value": "Тестирование api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "hama-ZenBook-UX425IA-UM425IA"}, {"name": "thread", "value": "44075-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}