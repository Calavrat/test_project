{"name": "Получение списка всех сотрудников", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "dummy_page = <pages.dummy_page.DummyPage object at 0x7577a4bd9e80>\n\n    @allure.story('Тестирование api')\n    @allure.title('Получение списка всех сотрудников')\n    @allure.description('По ендпоинту получить список всех сотрудников GET https://dummy.restapiexample.com/api/v1/employees')\n    @allure.severity(allure.severity_level.MINOR)\n    def test_list_employees(dummy_page):\n        with allure.step('Получение списка всех сотрудников данные записаны в debug'):\n>           dummy_page.endpointListEmployess()\n\ntest_api.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/dummy_page.py:42: in endpointListEmployess\n    logging.info(response.json())\n../playwright_project_2_env/lib/python3.12/site-packages/playwright/sync_api/_generated.py:18114: in json\n    return mapping.from_maybe_impl(self._sync(self._impl_obj.json()))\n../playwright_project_2_env/lib/python3.12/site-packages/playwright/_impl/_fetch.py:507: in json\n    return json.loads(content)\n/usr/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/usr/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7577a64bf0e0>\ns = '<!DOCTYPE html>\\n<html lang=\"en\">\\n    <head>\\n        <meta charset=\"utf-8\">\\n        <meta name=\"viewport\" content=...\" style=\"padding: 10px;\">\\n                Too Many Requests            </div>\\n        </div>\\n    </body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/usr/lib/python3.12/json/decoder.py:355: JSONDecodeError"}, "description": "По ендпоинту получить список всех сотрудников GET https://dummy.restapiexample.com/api/v1/employees", "steps": [{"name": "Получение списка всех сотрудников данные записаны в debug", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "trace": "  File \"/home/hama/Документы/PythonTests/playwright_project_2/tests/test_api.py\", line 10, in test_list_employees\n    dummy_page.endpointListEmployess()\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/pages/dummy_page.py\", line 42, in endpointListEmployess\n    logging.info(response.json())\n                 ^^^^^^^^^^^^^^^\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/playwright_project_2_env/lib/python3.12/site-packages/playwright/sync_api/_generated.py\", line 18114, in json\n    return mapping.from_maybe_impl(self._sync(self._impl_obj.json()))\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/playwright_project_2_env/lib/python3.12/site-packages/playwright/_impl/_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"/home/hama/Документы/PythonTests/playwright_project_2/playwright_project_2_env/lib/python3.12/site-packages/playwright/_impl/_fetch.py\", line 507, in json\n    return json.loads(content)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n"}, "start": 1748765198635, "stop": 1748765205475}], "attachments": [{"name": "log", "source": "cd414c8e-faf0-4646-a044-a4f3913f0400-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "45b10349-fe6a-464b-8878-5ca6f2c5acb8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser_name", "value": "'firefox'"}], "start": 1748765198635, "stop": 1748765205478, "uuid": "548296e2-f4b5-48b2-946b-473445e85ebc", "historyId": "3e722f6bf844a8496ab2ce39b02d3970", "testCaseId": "d3020ee90bb37de55c54c00daedbfddd", "fullName": "tests.test_api#test_list_employees", "labels": [{"name": "severity", "value": "minor"}, {"name": "story", "value": "Тестирование api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "hama-ZenBook-UX425IA-UM425IA"}, {"name": "thread", "value": "59598-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}